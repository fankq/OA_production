<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        "
>

   <!--springMvc项目集成shiro-->
   <description>Shiro Configuration</description>

   <!-- shiroFilter工厂 -->
   <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
      <!-- 构建securityManager环境 -->
      <property name="securityManager" ref="securityManager" />
      <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
      <property name="loginUrl" value="/login"/>
      <!-- 登录成功后要跳转的连接 -->
      <property name="successUrl" value="/admin"/>
      <!-- 没有权限返回的地址 （拒绝访问路径）-->
      <property name="unauthorizedUrl" value="/login" />
      <property name="filterChainDefinitions">
         <value>
            /statics/**=anon
            /login=anon
            /logout=anon
            /admin=user
            /**=authc

         </value>
      </property>
   </bean>


   <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

   <!-- AOP式方法级权限检查  -->
   <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
      <property name="proxyTargetClass" value="true" />
   </bean>
   <!--shiro权限注解-->
   <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
      <property name="securityManager" ref="securityManager"/>
   </bean>
   <!-- securityManager -->
   <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
      <!--调用自定义realm -->
      <property name="realm" ref="realm" />
      <!--rememberMe -->
      <property name="rememberMeManager" ref="rememberMeManager"/>
      <!--会话管理-->
      <property name="sessionManager" ref="sessionManager"/>
   </bean>

   <!-- 定义Session ID生成管理器 -->
   <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

   <!-- 配置Session DAO的操作处理 -->
   <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
      <!-- 设置session缓存的名字，这个名字可以任意 -->
      <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
      <!-- 定义该Session DAO操作中所使用的ID生成器 -->
      <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
   </bean>

   <bean id="realm" class="ssm.shiro.Realm"/>

   <!--手动指定cookie-->
   <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
      <constructor-arg value="rememberMe"/>
      <property name="httpOnly" value="true"/>
      <property name="maxAge" value="604800"/><!-- 7天 -->
   </bean>

   <!-- rememberMe管理器 -->
   <bean id="rememberMeManager"
         class="org.apache.shiro.web.mgt.CookieRememberMeManager">
      <!--注入自定义cookie(主要是设置寿命, 默认的一年太长)-->
      <property name="cookie" ref="rememberMeCookie"/>
   </bean>
   <!-- 定义会话管理器的操作 -->
   <bean id="sessionManager"
         class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
      <!-- 定义的是全局的session会话超时时间，此操作会覆盖web.xml文件中的超时时间配置 -->
      <property name="globalSessionTimeout" value="1000000"/>
      <!-- 删除所有无效的Session对象，此时的session被保存在了内存里面 -->
      <property name="deleteInvalidSessions" value="true"/>
      <!-- 定义要使用的无效的Session定时调度器 -->
      <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
      <!-- 需要让此session可以使用该定时调度器进行检测 -->
      <property name="sessionValidationSchedulerEnabled" value="true"/>
      <!-- 定义Session可以进行序列化的工具类 -->
      <property name="sessionDAO" ref="sessionDAO"/>
      <!-- 所有的session一定要将id设置到Cookie之中，需要提供有Cookie的操作模版 -->
      <property name="sessionIdCookie" ref="rememberMeCookie"/>
      <!-- 定义sessionIdCookie模版可以进行操作的启用 -->
      <property name="sessionIdCookieEnabled" value="true"/>
   </bean>
   <!-- 配置session的定时验证检测程序类，以让无效的session释放 -->
   <bean id="sessionValidationScheduler"
         class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
      <!-- 设置session的失效扫描间隔，单位为毫秒 -->
      <property name="sessionValidationInterval" value="100000"/>
      <!-- 随后还需要定义有一个会话管理器的程序类的引用 -->
      <property name="sessionManager" ref="sessionManager"/>
   </bean>

</beans>