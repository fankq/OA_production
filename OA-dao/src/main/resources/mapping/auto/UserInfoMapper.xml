<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ssm.dao.auto.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="ssm.model.auto.UserInfo" >
    <constructor >
      <idArg column="ID" jdbcType="DECIMAL" javaType="java.lang.Long" />
      <arg column="LOGINNAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PASSWORD" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="STATUS" jdbcType="DECIMAL" javaType="java.lang.Short" />
      <arg column="CREATEDATE" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="USERNAME" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, LOGINNAME, PASSWORD, STATUS, CREATEDATE, USERNAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="ssm.model.auto.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from USER_INF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from USER_INF
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from USER_INF
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="ssm.model.auto.UserInfoExample" >
    delete from USER_INF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.model.auto.UserInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      select sq_user_inf_id.nextval from dual
    </selectKey>
    insert into USER_INF (ID, LOGINNAME, PASSWORD, 
      STATUS, CREATEDATE, USERNAME
      )
    values (#{id,jdbcType=DECIMAL}, #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=DECIMAL}, #{createdate,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ssm.model.auto.UserInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      select sq_user_inf_id.nextval from dual
    </selectKey>
    insert into USER_INF
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="loginname != null" >
        LOGINNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createdate != null" >
        CREATEDATE,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=DECIMAL},
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.model.auto.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from USER_INF
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update USER_INF
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.loginname != null" >
        LOGINNAME = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.createdate != null" >
        CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update USER_INF
    set ID = #{record.id,jdbcType=DECIMAL},
      LOGINNAME = #{record.loginname,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=DECIMAL},
      CREATEDATE = #{record.createdate,jdbcType=TIMESTAMP},
      USERNAME = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ssm.model.auto.UserInfo" >
    update USER_INF
    <set >
      <if test="loginname != null" >
        LOGINNAME = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="ssm.model.auto.UserInfo" >
    update USER_INF
    set LOGINNAME = #{loginname,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      USERNAME = #{username,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>